@page "/order/management"
@using Horeca.Orders
@using Horeca.OrderLines
@using Horeca.Localization
@using Volo.Abp.AspNetCore.Components.Web
@inherits HorecaComponentBase
@inject IOrderAppService OrderAppService
@inject AbpBlazorMessageLocalizerHelper<HorecaResource> LH
<Card>
    <CardHeader>
        <Row>
            <Column ColumnSize="ColumnSize.Is12">
                <h1>@L["Orders"]</h1>
            </Column>
        </Row>
        <Row>
            <Column ColumnSize="ColumnSize.Is3">
                <Button Outline Clicked="() => SelectOrderState(OrderState.Submitted)">@L["New"]</Button>
            </Column>
            <Column ColumnSize="ColumnSize.Is3">
                <Button Outline Clicked="() => SelectOrderState(OrderState.Accepted)">@L["Accepted"]</Button>
            </Column>
            <Column ColumnSize="ColumnSize.Is3">
                <Button Outline Clicked="() => SelectOrderState(OrderState.Declined)">@L["Declined"]</Button>
            </Column>
            <Column ColumnSize="ColumnSize.Is3">
                <Button Outline Clicked="() => SelectOrderState(OrderState.Delivered)">@L["Delivered"]</Button>
            </Column>
        </Row>
    </CardHeader>
    <CardBody>
        <DataGrid TItem="OrderDto"
                  Data="OrderList"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  PageSize="PageSize"
                DetailRowStartsVisible="false">
            <DataGridColumns>
                <DataGridColumn TItem="OrderDto"
                                Field="@nameof(OrderDto.Id)"
                                Sortable="false"
                                Caption="@L["Actions"]">
                    <DisplayTemplate>
                        <Dropdown>
                            <DropdownToggle Color="Color.Primary">
                                @L["Actions"]
                            </DropdownToggle>
                            <DropdownMenu>
                                @if (IsSupplier && context.OrderState == OrderState.Submitted)
                                {
                                    <DropdownItem>
                                        <Button Color="Color.Primary" Clicked="() => UpdateOrderStatusAsync(context, OrderState.Accepted)">
                                            @L["Accept"]
                                        </Button>
                                    </DropdownItem>
                                    <DropdownItem>
                                        <Button Color="Color.Primary" Clicked="() => UpdateOrderStatusAsync(context, OrderState.Declined)">
                                            @L["Decline"]
                                         </Button>
                                    </DropdownItem>
                                }
                            </DropdownMenu>
                        </Dropdown>

                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="OrderDto"
                                Field="@nameof(OrderDto.Id)"
                                Caption="@L["Id"]"></DataGridColumn>
                @if (IsSupplier)
                {
                    <DataGridColumn TItem="OrderDto"
                                Field="@nameof(OrderDto.Customer)"
                                Caption="@L["Customer"]"></DataGridColumn>
                }
                <DataGridColumn TItem="OrderDto"
                                Field="@nameof(OrderDto.AddressDto)"
                                Caption="@L["Address"]">
                            <DisplayTemplate>
                                @GetAddressString(context)
                            </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="OrderDto"
                                Field="@nameof(OrderDto.Total)"
                                Caption="@L["Total"]"></DataGridColumn>
            </DataGridColumns>
            <DetailRowTemplate>
                @{
                    var lines = ( context as OrderDto ).Lines;

                            <DataGrid TItem="OrderLineDto"
                              Data="lines"
                              Sortable="false">
                                <DataGridColumn TItem="OrderLineDto" Field="@nameof(OrderLineDto.ProductName)" Caption="@L["Product"]" />
                                <DataGridColumn TItem="OrderLineDto" Field="@nameof(OrderLineDto.Count)" Caption="@L["Count"]" />
                                <DataGridColumn TItem="OrderLineDto" Field="@nameof(OrderLineDto.Sum)" Caption="@L["Sum"]" />
                            </DataGrid>
                }
            </DetailRowTemplate>
        </DataGrid>
    </CardBody>
</Card>